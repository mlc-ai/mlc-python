name: CI

on: [push, pull_request]
env:
  CIBW_BUILD_VERBOSITY: 3
  CIBW_TEST_REQUIRES: "pytest torch jsonpickle"
  CIBW_TEST_COMMAND: "pytest -svv --durations=20 {project}/tests/python/"
  CIBW_ENVIRONMENT: "MLC_SHOW_CPP_STACKTRACES=1"
  CIBW_REPAIR_WHEEL_COMMAND_LINUX: >
    auditwheel repair -w {dest_dir} {wheel} &&
    pipx run abi3audit --strict --report {wheel}
  CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
    delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} &&
    pipx run abi3audit --strict --report {wheel}
  CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: >
    pipx run delvewheel repair -w {dest_dir} {wheel} &&
    pipx run abi3audit --strict --report {wheel}
  MLC_CIBW_VERSION: "2.22.0"
  MLC_CIBW_PY_VERSION: "3.11"
  MLC_CIBW_WIN_BUILD: "cp39-win_amd64"
  MLC_CIBW_MAC_BUILD: "cp39-macosx_arm64"
  MLC_CIBW_LINUX_BUILD: "cp313-manylinux_x86_64"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pre-commit/action@v3.0.1
      - uses:  ytanikin/pr-conventional-commits@1.4.0
        if: github.event_name == 'pull_request'
        with:
          task_types: '["feat", "fix", "ci", "chore", "test"]'
          add_label: 'false'
  windows:
    name: Windows
    runs-on: windows-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Build wheels
        run: |
          uv run --no-project `
            --with cibuildwheel==${{ env.MLC_CIBW_VERSION }} `
            cibuildwheel --output-dir wheelhouse
        env:
          UV_PYTHON: ${{ env.MLC_CIBW_PY_VERSION }}
          CIBW_BEFORE_ALL: ".\\scripts\\cpp_tests.bat"
          CIBW_BUILD: ${{ env.MLC_CIBW_WIN_BUILD }}
      - name: Show package contents
        run: |
          uv run --no-project `
            python scripts/show_wheel_content.py wheelhouse
        env:
          UV_PYTHON: ${{ env.MLC_CIBW_PY_VERSION }}
  macos:
    name: MacOS
    runs-on: macos-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Build wheels
        run: |
          uv run --no-project \
            --with cibuildwheel==${{ env.MLC_CIBW_VERSION }} \
            cibuildwheel --output-dir wheelhouse
        env:
          UV_PYTHON: ${{ env.MLC_CIBW_PY_VERSION }}
          CIBW_BEFORE_ALL: "./scripts/cpp_tests.sh"
          CIBW_BUILD: ${{ env.MLC_CIBW_MAC_BUILD }}
      - name: Show package contents
        run: |
          uv run --no-project \
            python scripts/show_wheel_content.py wheelhouse
        env:
          UV_PYTHON: ${{ env.MLC_CIBW_PY_VERSION }}
  linux:
    name: Linux
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Build wheels
        run: |
          uv run --no-project \
            --with cibuildwheel==${{ env.MLC_CIBW_VERSION }} \
            cibuildwheel --output-dir wheelhouse
        env:
          UV_PYTHON: ${{ env.MLC_CIBW_PY_VERSION }}
          CIBW_BEFORE_ALL: "./scripts/setup_manylinux2014.sh && ./scripts/cpp_tests.sh"
          CIBW_BUILD: ${{ env.MLC_CIBW_LINUX_BUILD }}
      - name: Show package contents
        run: |
          uv run --no-project \
            python scripts/show_wheel_content.py wheelhouse
        env:
          UV_PYTHON: ${{ env.MLC_CIBW_PY_VERSION }}
